package boot.study.login;

public class UserDao {
	
	    private String jdbcURL = "jdbc:mysql://localhost:3306/mydb";
	    private String jdbcUsername = "root";
	    private String jdbcPassword = "password";

	    private static final String INSERT_USER_SQL = "INSERT INTO users" + "  (username, password, email, phone) VALUES "
	            + " (?, ?, ?, ?);";
	    private static final String SELECT_USER_BY_USERNAME_PASSWORD = "select id,username,email,phone from users where username =? and password=?";
	    private static final String SELECT_USER_BY_ID = "select id,username,email,phone from users where id=?";
	    private static final String UPDATE_USER_SQL = "update users set username=?, password=?, email=?, phone=? where id=?;";
	    private static final String DELETE_USER_SQL = "delete from users where id=?;";

	    public UserDAO() {
	    }

	    protected Connection getConnection() {
	        Connection connection = null;
	        try {
	            Class.forName("com.mysql.jdbc.Driver");
	            connection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
	        } catch (SQLException e) {
	            // handle exception
	        } catch (ClassNotFoundException e) {
	            // handle exception
	        }
	        return connection;
	    }

	    public void insertUser(User user) throws SQLException {
	        try (Connection connection = getConnection();
	             PreparedStatement preparedStatement = connection.prepareStatement(INSERT_USER_SQL)) {
	            preparedStatement.setString(1, user.getUsername());
	            preparedStatement.setString(2, user.getPassword());
	            preparedStatement.setString(3, user.getEmail());
	            preparedStatement.setString(4, user.getPhone());
	            preparedStatement.executeUpdate();
	        } catch (SQLException e) {
	            // handle exception
	        }
	    }

	    public User selectUser(String username, String password) {
	        User user = null;
	        try (Connection connection = getConnection();
	             PreparedStatement preparedStatement = connection.prepareStatement(SELECT_USER_BY_USERNAME_PASSWORD)) {
	            preparedStatement.setString(1, username);
	            preparedStatement.setString(2, password);
	            ResultSet rs = preparedStatement.executeQuery();

	            while (rs.next()) {
	                int id = rs.getInt("id");
	                String email = rs.getString("email");
	                String phone = rs.getString("phone");
	                user = new User(id, username, password, email, phone);
	            }
	        } catch (SQLException e) {
	            // handle exception
	        }
	        return user;
	    }

}
